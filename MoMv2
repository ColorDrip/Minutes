import pygetwindow as gw
import pytesseract
from PIL import ImageGrab
import time
import re

# Configuration
WINDOW_TITLE = "Your Window Title Here"  # Update this
OUTPUT_FILE = "clean_chat_log.txt"
SCAN_INTERVAL = 1.5  # 1.5 seconds between checks
PYTESSERACT_PATH = r'C:\Program Files\Tesseract-OCR\tesseract.exe'  # Update this

# Regex patterns for cleaning
TIMESTAMP_PATTERN = re.compile(r'\b\d{1,2}:\d{2}(?::\d{2})?\b')  # HH:MM or HH:MM:SS
SPECIAL_CHARS = re.compile(r'[•©®~\\|•♣♥♦♠�]+')  # Add more characters if needed

pytesseract.pytesseract.tesseract_cmd = PYTESSERACT_PATH
previous_lines = set()

def clean_text(text):
    """Remove timestamps and special characters"""
    text = TIMESTAMP_PATTERN.sub('', text)  # Remove timestamps
    text = SPECIAL_CHARS.sub('', text)  # Remove special characters
    return text.strip()

def capture_window_text():
    try:
        win = gw.getWindowsWithTitle(WINDOW_TITLE)[0]
        if win.isMinimized:
            return ""
            
        x, y, w, h = win.left, win.top, win.width, win.height
        screenshot = ImageGrab.grab(bbox=(x, y, x + w, y + h))
        raw_text = pytesseract.image_to_string(screenshot)
        return clean_text(raw_text)
    except Exception:
        return ""

def log_new_lines():
    global previous_lines
    current_text = capture_window_text()
    
    if not current_text:
        return
        
    current_lines = {line.strip() for line in current_text.split('\n') if line.strip()}
    new_lines = current_lines - previous_lines
    
    if new_lines:
        with open(OUTPUT_FILE, 'a', encoding='utf-8') as f:
            for line in new_lines:
                f.write(f"{line}\n")
        print(f"Added {len(new_lines)} new lines")
        
    previous_lines = current_lines  # Update tracking

if __name__ == "__main__":
    print(f"Monitoring '{WINDOW_TITLE}'. Press Ctrl+C to stop.")
    try:
        while True:
            log_new_lines()
            time.sleep(SCAN_INTERVAL)
    except KeyboardInterrupt:
        print("\nMonitoring stopped")
